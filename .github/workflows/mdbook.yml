# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site(s) to Pages

on:
  # Runs on pushes targeting the other branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      # Use pinned versions to allow caching (?)
      # Don't use MDBOOK_... because those env variables give warnings in "mdbook build"
      MDB_VERSION: 0.4.51
      MDB_ADMONISH_VERSION: "^1.20"
      MDB_TOC_VERSION: 0.14.2
      MDB_IMAGE_SIZE_VERSION: 0.2.1
    steps:
      - uses: actions/checkout@v4

      - name: Cache rust/cargo and tools
        id: cache-cargo
        uses: actions/cache@v4
        env:
          cache-name: cache-cargo-modules
        with:
          path: |
            ~/.cargo/
            ~/.rustup

          # the hashFiles always return an emtpy string here. Why?
          # key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.MDB_VERSION }}-${{ env.MDB_ADMONISH_VERSION }}-${{ env.MDB_TOC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        name: List the state
        continue-on-error: true
        run: cargo install --list

      - name: Install mdBook
        run: |
          rustup update
          cargo install --version ${MDB_VERSION} mdbook
          cargo install --version ${MDB_ADMONISH_VERSION} mdbook-admonish
          cargo install --version ${MDB_TOC_VERSION} mdbook-toc
          cargo install --version ${MDB_IMAGE_SIZE_VERSION} mdbook-image-size

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with mdBook
        run: |
          echo -e "# Version of this documentation\n\n" > en/src/doc-version-info-automatically-generated.md
          echo -e "# Version dieser Dokumentation\n\n"  > de/src/doc-version-info-automatically-generated.md
          ( echo -e "## Last commit\n\n\`\`\`" ; git log -n 1 ; echo '```' ; UNCOMMITED=$(git status --porcelain '*.md*') ; [ -n "$UNCOMMITED" ] && { echo -e "\n\`\`\`\n## Plus yet uncommited changes\n\n$UNCOMMITED\n\`\`\`"; } ; echo -e "\nBuild: $(date --iso-8601=minutes)" ) | tee -a  en/src/doc-version-info-automatically-generated.md  de/src/doc-version-info-automatically-generated.md
          mdbook build -d ../book    en
          mdbook build -d ../book/de de

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
